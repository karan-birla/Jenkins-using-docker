pipeline {
  agent any
  environment {
    DOCKER_BUILDKIT = '1'
  }
  stages {
    stage('Build JAR') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps {
        dir('app') {
          sh 'mvn clean package -DskipTests'
        }
      }
    }

    stage('Build Docker Image if Not Exists') {
      agent any
      steps {
        script {
          def imageExists = sh(script: "docker images -q java-app-image", returnStdout: true).trim()
          if (!imageExists) {
            echo "Image not found. Building new image..."
            dir('app') {
              sh 'docker build -t java-app-image .'
            }
          } else {
            echo "Using cached image: java-app-image"
          }
        }
      }
    }

    stage('Deploy to Non-Prod') {
      when { branch 'dev' }
      agent any
      steps {
        sh 'docker ps -q -f name=non-prod || docker-compose -f ../deploy/docker-compose.nonprod.yml up -d'
      }
    }

    stage('Deploy to Prod') {
      when { branch 'main' }
      agent any
      steps {
        sh 'docker ps -q -f name=prod || docker-compose -f ../deploy/docker-compose.prod.yml up -d'
      }
    }
  }
}